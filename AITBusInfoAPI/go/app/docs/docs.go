// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "仕様書使用する際の注意事項",
        "contact": {
            "name": "APIサポーター",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "ライセンス(必須)",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/mode": {
            "get": {
                "description": "指定した日の運行ダイヤを返すエンドポイント",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "Get Operation Mode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "例：2024-06-05",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OperationModeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.QueryErrorResponse"
                        }
                    }
                }
            }
        },
        "/modeall": {
            "get": {
                "description": "1年分全ての運行ダイヤを返すエンドポイント",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "Get All Operation Mode",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OperationModeAllResponse"
                        }
                    }
                }
            }
        },
        "/nextbus": {
            "get": {
                "description": "次に来るバスの時刻を返すエンドポイント",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "Get Next Bus Time",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "0の場合は次のバスの時刻を、1の場合は次の次のバスの時刻を返します",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cstrong\u003e※その日のバスの運行が終了した or バスの運行が無い日の場合は以下の要素はレスポンスに含まれません。\u003c/strong\u003e\u003cbr\u003e \u003cli\u003e` + "`" + `nextHourToAIT` + "`" + `\u003c/li\u003e\u003cli\u003e` + "`" + `nextHourToYakusa` + "`" + `\u003c/li\u003e\u003cli\u003e` + "`" + `nextMinuteToAIT` + "`" + `\u003c/li\u003e\u003cli\u003e` + "`" + `nextMinuteToYakusa` + "`" + `\u003c/li\u003e",
                        "schema": {
                            "$ref": "#/definitions/model.NextBusTimeResponse"
                        }
                    }
                }
            }
        },
        "/timetable": {
            "get": {
                "description": "指定した運行ダイヤの時刻表を返すエンドポイント",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "Get TimeTable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "例：A_toAIT | A_toYakusa | B_toAIT | B_toYakusa | C_toAIT | C_toYakusa",
                        "name": "mode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TimeTableResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.QueryErrorResponse"
                        }
                    }
                }
            }
        },
        "/timetableall": {
            "get": {
                "description": "1年分の全時刻表を返すエンドポイント",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "Get All TimeTable",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TimeTableResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BusState": {
            "type": "object",
            "properties": {
                "IsExist": {
                    "type": "boolean"
                },
                "IsFirst": {
                    "type": "boolean"
                }
            }
        },
        "model.NextBusTimeResponse": {
            "type": "object",
            "properties": {
                "busState": {
                    "$ref": "#/definitions/model.BusState"
                },
                "nextHourToAIT": {
                    "type": "integer"
                },
                "nextHourToYakusa": {
                    "type": "integer"
                },
                "nextMinuteToAIT": {
                    "type": "integer"
                },
                "nextMinuteToYakusa": {
                    "type": "integer"
                },
                "schedule": {
                    "type": "string"
                }
            }
        },
        "model.OperationMode": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            }
        },
        "model.OperationModeAllResponse": {
            "type": "object",
            "properties": {
                "operationModes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.OperationMode"
                    }
                }
            }
        },
        "model.OperationModeResponse": {
            "type": "object",
            "properties": {
                "operationMode": {
                    "type": "string"
                }
            }
        },
        "model.QueryErrorResponse": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "model.TimeTable": {
            "type": "object",
            "properties": {
                "hour": {
                    "type": "integer"
                },
                "minutes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.TimeTableResponse": {
            "type": "object",
            "properties": {
                "timeTable": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.TimeTable"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "バージョン(1.0)",
	Host:             "bus-api.bigbell.dev",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "APIドキュメントのタイトル",
	Description:      "仕様書に関する内容説明",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
